-- 학생 테이블 생성
-- 학번, 이름, 학과명, 평점
CREATE TABLE STUDENT(
	STD_NO CHAR(8),
	STD_NAME VARCHAR2(50),
	MAJOR_NAME VARCHAR2(50),
	STD_SCORE NUMBER(3,2)
);
-- 데이터 추가
INSERT INTO STUDENT (STD_NO,STD_NAME, MAJOR_NAME, STD_SCORE) VALUES('20201111','홍길동','컴퓨터공학과',3.24);

-- 학생 테이블 데이터 전체 조회
SELECT * FROM STUDENT;
SELECT STD_NO, STD_NAME FROM STUDENT;

-- DDL : Data Definition Language, 데이터 정의어
-- 데이터베이스 스키마(개체 및 구성요소)를 정의, 변경, 삭제에 사용
-- CREATE : 데이터베이스 구성 요소 생성(테이블, 인덱스, 시퀀스, 사용자...)
-- ALTER : 생성된 데이터베이스 구성 요소를 변경할 때 사용
-- DROP : 생성된 데이터베이스 구성 요소를 삭제할 때 사용
-- TRUNCATE : 테이블의 모든 데이터를 빠르게 삭제하고, 공간을 해제, 구조는 유지

-- 테이블 생성
CREATE TABLE 테이블_이름(
	컬럼명1 데이터타입 [NULL | NOT NULL],
	컬럼명2 데이터타입 DEFAULT 기본값,
	컬럼명3 데이터타입,
	...
	CONSTRAINT 제약조건이름 PRIMARY KEY(컬럼명)
); 

CREATE TABLE 테이블_이름(
	컬럼명1 데이터타입 PRIMARY KEY,
	컬럼명2 데이터타입 DEFAULT 기본값,
	컬럼명3 데이터타입,
	...
); 
-- 데이터 타입
-- 문자열 : CHAR(고정문자열, 2000B 지원), VARCHAR2(4000B), CLOB(128TB)
-- 숫자 : NUMBER(자리수, 소수점개수) -> 최대 38, FLOAT(128)
-- 날짜 시간 : DATE(날짜/시간), TIMESTAMP(소수점까지 저장 가능 최대 9자리)

-- PERSON 테이블
-- 이름 -> 문자열
-- 나이 -> 숫자
CREATE TABLE PERSON(
	PNAME VARCHAR2(30),
	PAGE NUMBER(3)
);

-- 데이터 5건 넣는 SQL문
INSERT INTO PERSON(PNAME, PAGE) VALUES('John', 25);
INSERT INTO PERSON(PNAME, PAGE) VALUES('Emma', 30);
INSERT INTO PERSON(PNAME, PAGE) VALUES('Michael', 40);
INSERT INTO PERSON(PNAME, PAGE) VALUES('Sophia', 20);

-- 테이블에 모든 컬럼에 데이터를 저장. 테이블 생성 시 작성한 컬럼 순서대로 데이터 작성
INSERT INTO PERSON VALUES('김철수', 35);

-- PERSON 테이블에 있는 모든 데이터를 조회
SELECT * FROM PERSON;

-- 나이가 4자리인 PERSON 데이터 추가
INSERT INTO PERSON VALUES('최승인', 1234);

-- PERSON 테이블 삭제 --> 삭제 시 모든 데이터가 날아간다.
DROP TABLE PERSON;

CREATE TABLE PERSON(
	PNAME VARCHAR2(30),
	PAGE NUMBER(3) DEFAULT 30
);

-- PAGE 데이터를 넣지 않았기 때문에 기본값 지정한 30이 저장
INSERT INTO PERSON(PNAME) VALUES('최승인');

-- PERSON 테이블 데이터 삭제
TRUNCATE TABLE PERSON;

-- 학생 테이블 삭제
DROP TABLE STUDENT;

-- 학생 테이블
-- 학번, 이름, 학과명, 평점
CREATE TABLE STUDENT(
	STD_NO CHAR(8) PRIMARY KEY, -- 기본키 설정
	STD_NAME VARCHAR2(30) NOT NULL, -- 데이터를 반드시 입력
	MAJOR_NAME VARCHAR2(30),
	-- 기본값 0으로 설정, NULL은 입력할 수 없음
	STD_SCORE NUMBER(3,2) DEFAULT 0 NOT NULL 
);

-- 학생 데이터 5건 저장
INSERT INTO STUDENT(STD_NO,STD_NAME, MAJOR_NAME, STD_SCORE) VALUES('20201111', '홍길동', '컴퓨터공학과', 3.24);
-- NOT NULL에 데이터를 안 넣은 경우
INSERT INTO STUDENT(STD_NO,STD_NAME, STD_SCORE) VALUES('20201112', '이지은', 4.0);
-- DEFAULT와 NOT NULL이 지정된 곳에 데이터를 안 넣었을 경우
INSERT INTO STUDENT(STD_NO,STD_NAME, MAJOR_NAME) VALUES('20201113', '박지현', '기계공학과');
-- DEFAULT와 NOT NULL이 있으면 데이터를 넣지 않으면 기본값이 저장
-- 단, NULL 값을 직접 지정하려고 하면 안됨
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201114', '김상혁', '컴퓨터공학과', 3.24);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201115', '최민수', '전자공학과', 3.80);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201116', '이하늘', '기계공학과', 3.50);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201117', '정다운', '경영학과', 3.67);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201118', '박소연', '화학과', 4.10);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201119', '조민재', '수학과', 3.80);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201120', '오지호', '물리학과', 3.90);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201121', '한지우', '경제학과', 4.00);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201122', '강지원', '심리학과', 3.75);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201123', '임서현', '의학과', 4.20);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201124', '이도현', '약학과', 3.60);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201125', '신혜진', '정보보호학과', 3.95);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201126', '문정호', '환경공학과', 3.40);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201127', '윤서연', '생명과학과', 3.55);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201128', '장윤아', '디자인학과', 4.30);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201129', '배유진', '토목공학과', 3.65);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201130', '정수빈', '기계설계학과', 3.85);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201131', '한나래', '패션디자인학과', 3.95);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201132', '김지우', '미디어학과', 4.05);
INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('20201133', '최윤수', '인문학과', 3.72);

INSERT INTO STUDENT (STD_NO, STD_NAME, MAJOR_NAME, STD_SCORE) VALUES ('2024000', '김김김', '인문학과', 3.72);

-- 학생 데이터 검색
SELECT * FROM STUDENT WHERE STD_NO = '20230001';
SELECT * FROM STUDENT WHERE STD_NO = '2024000';
-- CHAR 고정길이 문자열이라서 공간이 남으면 뒤에 공백으로 채움
SELECT * FROM STUDENT WHERE STD_NO LIKE '2024000';
SELECT * FROM STUDENT WHERE STD_NO LIKE '2024000 ';
-- 평점이 3.0 이상인 데이터만 조회
SELECT * FROM STUDENT WHERE STD_SCORE >= 3.0;

-- 테이블 컬럼 추가
ALTER TABLE STUDENT ADD STD_GENDER NUMBER(1) DEFAULT 0 NOT NULL;

--테이블 컬럼을 변경
ALTER TABLE STUDENT MODIFY STD_GENDER CHAR(1) DEFAULT 'M' NOT NULL;
ALTER TABLE STUDENT MODIFY STD_GENDER CHAR(1) DEFAULT 'M';
ALTER TABLE STUDENT MODIFY STD_GENDER NUMBER(1) DEFAULT 0 NULL;

UPDATE STUDENT SET STD_GENDER = NULL;

-- 테이블 컬럼 삭제
ALTER  TABLE STUDENT DROP COLUMN STD_GENDER;

-- 테이블 컬럼 이름 변경
ALTER TABLE STUDENT RENAME COLUMN STD_NAME TO STD_NEW_NAME;

-- 테이블 이름 변경
ALTER TABLE STUDENT RENAME TO NEW_STUDENT;

-- 날짜 컬럼 추가 및 데이터 추가
ALTER TABLE PERSON ADD BIRTH DATE;

-- PERSON 데이터 
INSERT INTO PERSON (PNAME, PAGE, BIRTH) VALUES('박명운', 22, '1999-04-29');
INSERT INTO PERSON (PNAME, PAGE, BIRTH) VALUES('박명운', 22, '1999/04/29');
INSERT INTO PERSON (PNAME, PAGE, BIRTH) VALUES('박명운', 22, '99/04/29');

SELECT  * FROM PERSON;

-- 현재 날짜 시간 확인 방법
SELECT SYSDATE FROM DUAL;
INSERT INTO PERSON (PNAME, PAGE, BIRTH) VALUES('박명운', 22, SYSDATE);

-- 사원정보 저장할 테이블 생성
-- 사번, 이름, 직급, 부서명, 연봉, 입사일
CREATE TABLE EMPLOYEE(
	EMP_ID CHAR(9) PRIMARY KEY,
	EMP_NAME VARCHAR2(30),
	POS_NAME VARCHAR2(30),
	DEPT_NAME VARCHAR2(20) DEFAULT '사원' NOT NULL,
	SALARY NUMBER(15,2) DEFAULT 0,
	HIRE_DATE DATE DEFAULT SYSDATE
);

DROP TABLE EMPLOYEE;
SELECT * FROM EMPLOYEE;
